{"version":3,"file":"dropdown_input.js","sources":["../../../src/constants.ts","../../../src/vanilla.ts","../../../src/utils.ts","../../../src/plugins/dropdown_input/plugin.ts"],"sourcesContent":["export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, ''+val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select.js';\nimport * as constants from '../../constants.js';\nimport { getDom, setAttr } from '../../vanilla';\nimport { addEvent } from '../../utils';\n\n\nTomSelect.define('dropdown_input',function(this:TomSelect) {\n\tvar self = this;\n\n\tvar input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\tinput = getDom( input ) as HTMLInputElement;\n\n\tif (self.settings.placeholder) {\n\t\tsetAttr(input,{placeholder:self.settings.placeholder});\n\t}\n\n\tself.settings.controlInput = input;\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.on('initialize',()=>{\n\n\t\t// open/close dropdown when tabbing focus on wrapper\n\t\taddEvent(self.wrapper,'focus', (evt) => {\n\t\t\tself.onFocus(evt as MouseEvent)\n\t\t});\n\t\t\n\t\tconst setTabIndex = () => {\n\t\t\tsetAttr(self.wrapper,{tabindex:self.input.disabled ? '-1' : self.tabIndex});\n\t\t};\n\t\t\n\t\tself.on('dropdown_close',setTabIndex);\n\t\tself.on('dropdown_open',() => setAttr(self.wrapper,{tabindex:'-1'}) );\n\t\tsetTabIndex();\n\n\n\t\t// keyboard navigation\n\t\taddEvent(self.wrapper,'keypress',(evt) => {\n\n\t\t\tif( self.control.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif( self.dropdown.contains(evt.target as HTMLElement) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// open dropdown on enter when wrapper is tab-focused\n\t\t\tswitch( (<KeyboardEvent>evt).keyCode ){\n\t\t\t\tcase constants.KEY_RETURN:\n\t\t\t\t\tself.onClick();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t});\n\n\t\tlet div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.appendChild(input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t});\n\n});\n"],"names":["KEY_RETURN","navigator","test","userAgent","getDom","query","jquery","HTMLElement","indexOf","div","document","createElement","innerHTML","trim","firstChild","querySelector","setAttr","el","attrs","attr","val","removeAttribute","setAttribute","addEvent","target","type","callback","options","addEventListener","TomSelect","define","self","input","settings","controlInput","placeholder","shouldOpen","on","wrapper","evt","onFocus","setTabIndex","tabindex","disabled","tabIndex","control","contains","dropdown","keyCode","constants","onClick","appendChild","insertBefore"],"mappings":"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"}