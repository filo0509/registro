{"version":3,"file":"tom-select.base.min.js","sources":["../../src/contrib/microevent.ts","../../../sifter.js/lib/diacritics.ts","../../../sifter.js/lib/utils.ts","../../../sifter.js/lib/sifter.ts","../../src/vanilla.ts","../../src/contrib/highlight.ts","../../src/constants.ts","../../src/defaults.ts","../../src/utils.ts","../../src/tom-select.ts","../../src/contrib/microplugin.ts","../../src/getSettings.ts"],"sourcesContent":["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tthis._events[event] = this._events[event] || [];\n\t\t\tthis._events[event].push(fct);\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1) return delete this._events[event];\n\n\t\t\tif (event in this._events === false) return;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tif(event in self._events === false) return;\n\t\t\tfor( let fct of self._events[event] ){\n\t\t\t\tfct.apply(self, args );\n\t\t\t}\n\t\t});\n\t}\n};\n","\ntype TDiacraticList = {[key:string]:string};\n\n// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\nvar latin_pat:RegExp;\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\nconst accent_reg = new RegExp(accent_pat,'g');\nvar diacritic_patterns:TDiacraticList;\n\nconst latin_convert:TDiacraticList = {\n\t'æ': 'ae',\n\t'ⱥ': 'a',\n\t'ø': 'o',\n};\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'),'g');\n\n\nexport const DIACRITICS:TDiacraticList = {\n\t\" \":\" \",\n\t0:\"߀\",\n\tA:\"ⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ\",\n\tAA:\"Ꜳ\",\n\tAE:\"ÆǼǢ\",\n\tAO:\"Ꜵ\",\n\tAU:\"Ꜷ\",\n\tAV:\"ꜸꜺ\",\n\tAY:\"Ꜽ\",\n\tB:\"ⒷＢḂḄḆɃƁ\",\n\tC:\"ⒸＣꜾḈĆCĈĊČÇƇȻ\",\n\tD:\"ⒹＤḊĎḌḐḒḎĐƊƉᴅꝹ\",\n\tDh:\"Ð\",\n\tDZ:\"ǱǄ\",\n\tDz:\"ǲǅ\",\n\tE:\"ɛⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎᴇ\",\n\tF:\"ꝼⒻＦḞƑꝻ\",\n\tG:\"ⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾɢ\",\n\tH:\"ⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ\",\n\tI:\"ⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ\",\n\tJ:\"ⒿＪĴɈȷ\",\n\tK:\"ⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ\",\n\tL:\"ⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ\",\n\tLJ:\"Ǉ\",\n\tLj:\"ǈ\",\n\tM:\"ⓂＭḾṀṂⱮƜϻ\",\n\tN:\"ꞤȠⓃＮǸŃÑṄŇṆŅṊṈƝꞐᴎ\",\n\tNJ:\"Ǌ\",\n\tNj:\"ǋ\",\n\tO:\"ⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ\",\n\tOE:\"Œ\",\n\tOI:\"Ƣ\",\n\tOO:\"Ꝏ\",\n\tOU:\"Ȣ\",\n\tP:\"ⓅＰṔṖƤⱣꝐꝒꝔ\",\n\tQ:\"ⓆＱꝖꝘɊ\",\n\tR:\"ⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ\",\n\tS:\"ⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ\",\n\tT:\"ⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ\",\n\tTh:\"Þ\",\n\tTZ:\"Ꜩ\",\n\tU:\"ⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ\",\n\tV:\"ⓋＶṼṾƲꝞɅ\",\n\tVY:\"Ꝡ\",\n\tW:\"ⓌＷẀẂŴẆẄẈⱲ\",\n\tX:\"ⓍＸẊẌ\",\n\tY:\"ⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ\",\n\tZ:\"ⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ\",\n\ta:\"ⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑ\",\n\taa:\"ꜳ\",\n\tae:\"æǽǣ\",\n\tao:\"ꜵ\",\n\tau:\"ꜷ\",\n\tav:\"ꜹꜻ\",\n\tay:\"ꜽ\",\n\tb:\"ⓑｂḃḅḇƀƃɓƂ\",\n\tc:\"ｃⓒćĉċčçḉƈȼꜿↄ\",\n\td:\"ⓓｄḋďḍḑḓḏđƌɖɗƋᏧԁꞪ\",\n\tdh:\"ð\",\n\tdz:\"ǳǆ\",\n\te:\"ⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇǝ\",\n\tf:\"ⓕｆḟƒ\",\n\tff:\"ﬀ\",\n\tfi:\"ﬁ\",\n\tfl:\"ﬂ\",\n\tffi:\"ﬃ\",\n\tffl:\"ﬄ\",\n\tg:\"ⓖｇǵĝḡğġǧģǥɠꞡꝿᵹ\",\n\th:\"ⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ\",\n\thv:\"ƕ\",\n\ti:\"ⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı\",\n\tj:\"ⓙｊĵǰɉ\",\n\tk:\"ⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ\",\n\tl:\"ⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇɭ\",\n\tlj:\"ǉ\",\n\tm:\"ⓜｍḿṁṃɱɯ\",\n\tn:\"ⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥлԉ\",\n\tnj:\"ǌ\",\n\to:\"ⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿꝋꝍɵɔᴑ\",\n\toe:\"œ\",\n\toi:\"ƣ\",\n\too:\"ꝏ\",\n\tou:\"ȣ\",\n\tp:\"ⓟｐṕṗƥᵽꝑꝓꝕρ\",\n\tq:\"ⓠｑɋꝗꝙ\",\n\tr:\"ⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ\",\n\ts:\"ⓢｓśṥŝṡšṧṣṩșşȿꞩꞅẛʂ\",\n\tss:\"ß\",\n\tt:\"ⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ\",\n\tth:\"þ\",\n\ttz:\"ꜩ\",\n\tu:\"ⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ\",\n\tv:\"ⓥｖṽṿʋꝟʌ\",\n\tvy:\"ꝡ\",\n\tw:\"ⓦｗẁẃŵẇẅẘẉⱳ\",\n\tx:\"ⓧｘẋẍ\",\n\ty:\"ⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ\",\n\tz:\"ⓩｚźẑżžẓẕƶȥɀⱬꝣ\"\n}\n\n/**\n * code points generated from toCodePoints();\n * removed 65339 to 65345\n */\nexport const code_points = [\n\t[ 67, 67 ],\n\t[ 160, 160 ],\n\t[ 192, 438 ],\n\t[ 452, 652 ],\n\t[ 961, 961 ],\n\t[ 1019, 1019 ],\n\t[ 1083, 1083 ],\n\t[ 1281, 1289 ],\n\t[ 1984, 1984 ],\n\t[ 5095, 5095 ],\n\t[ 7429, 7441 ],\n\t[ 7545, 7549 ],\n\t[ 7680, 7935 ],\n\t[ 8580, 8580 ],\n\t[ 9398, 9449 ],\n\t[ 11360, 11391 ],\n\t[ 42792, 42793 ],\n\t[ 42802, 42851 ],\n\t[ 42873, 42897 ],\n\t[ 42912, 42922 ],\n\t[ 64256, 64260 ],\n\t[ 65313, 65338 ],\n\t[ 65345, 65370 ]\n];\n\n/**\n * Remove accents\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n *\n */\nexport const asciifold = (str:string):string => {\n\treturn str\n\t\t.normalize('NFKD')\n\t\t.replace(accent_reg, '')\n\t\t.toLowerCase()\n\t\t.replace(convert_pat,function(foreignletter) {\n\t\t\treturn latin_convert[foreignletter];\n\t\t});\n};\n\n\n/**\n * Convert list of diacritics to array of code points\n *\n */\n// @ts-ignore\nfunction toCodePoints(tolerance=8){\n\tvar char_codes:number[] = [];\n\n\tfor( let letter in DIACRITICS ){\n\t\tlet _diacritics = DIACRITICS[letter];\n\t\tfor( let n = 0; n < _diacritics.length; n++ ){\n\t\t\tvar code_point = _diacritics.codePointAt(n);\n\t\t\tif( code_point ) char_codes.push( code_point );\n\t\t}\n\t}\n\n\t//https://stackoverflow.com/questions/40431572/is-there-a-simple-way-to-group-js-array-values-by-range\n\tchar_codes.sort((a, b) => a - b);\n\tvar accumulator: number[][] = [];\n\tchar_codes.reduce(function (accumulator, currentValue, index, source) {\n\n\t\tif( !index ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else if( currentValue - source[index - 1] > tolerance ){\n\t\t\taccumulator.push( [currentValue,currentValue] );\n\n\t\t}else{\n\n\t\t\tlet range = accumulator.pop();\n\t\t\tif( range ){\n\t\t\t\taccumulator.push( [range[0],currentValue]);\n\t\t\t}\n\t\t}\n\n\t\treturn accumulator;\n\t}, accumulator);\n\n}\n\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n *\n */\nexport const arrayToPattern = (chars:string[],glue:string='|'):string =>{\n\tif( chars.length > 1 ){\n\t\treturn '(?:'+chars.join(glue)+')';\n\t}\n\treturn chars[0];\n};\n\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n *\n */\nexport const allSubstrings = (input:string):string[][] => {\n\n    if( input.length === 1) return [[input]];\n\n    var result:string[][] = [];\n    allSubstrings(input.substring(1)).forEach(function(subresult) {\n        var tmp = subresult.slice(0);\n        tmp[0] = input.charAt(0) + tmp[0];\n        result.push(tmp);\n\n        tmp = subresult.slice(0);\n        tmp.unshift(input.charAt(0));\n        result.push(tmp);\n    });\n    \n    return result;\n}\n\n/**\n * Generate a list of diacritics from the list of code points\n *\n */\nexport const generateDiacritics = ():TDiacraticList => {\t\n\n\tvar diacritics:{[key:string]:string[]} = {};\n\tcode_points.forEach((code_range)=>{\n\n\t\tfor(let i = code_range[0]; i <= code_range[1]; i++){\n\t\t\t\n\t\t\tlet diacritic\t= String.fromCharCode(i);\t\t\t\n\t\t\tlet\tlatin\t\t= asciifold(diacritic);\t\t\t\n\t\t\t\t\n\t\t\tif( latin == diacritic.toLowerCase() ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( !(latin in diacritics) ){\n\t\t\t\tdiacritics[latin] = [latin];\n\t\t\t}\n\t\t\tdiacritics[latin].push(diacritic);\n\t\t}\n\t});\n\t\t\n\tvar latin_chars = Object.keys(diacritics);\n\t\n\t\n\t// latin character pattern\n\t// match longer substrings first\n\tlatin_chars\t\t= latin_chars.sort((a, b) => b.length - a.length );\n\tlatin_pat\t\t= new RegExp('('+ arrayToPattern(latin_chars) + accent_pat + '*)','g');\n\t\n\t\n\t// build diacritic patterns\n\t// ae needs: \n\t//\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\tvar diacritic_patterns:TDiacraticList = {};\n\tlatin_chars.sort((a,b) => a.length -b.length).forEach((latin)=>{\n\t\t\n\t\tvar substrings\t= allSubstrings(latin);\n\t\tvar pattern = substrings.map((sub_pat)=>{\n\t\t\t\n\t\t\tsub_pat = sub_pat.map((l)=>{\n\t\t\t\tif( diacritics.hasOwnProperty(l) ){\n\t\t\t\t\treturn arrayToPattern(diacritics[l]);\n\t\t\t\t}\n\t\t\t\treturn l;\n\t\t\t});\n\t\t\t\n\t\t\treturn arrayToPattern(sub_pat,'');\n\t\t});\n\t\t\n\t\tdiacritic_patterns[latin] = arrayToPattern(pattern);\t\t\n\t});\n\t\t\t\n\treturn diacritic_patterns;\n}\n\n/**\n * Expand a regular expression pattern to include diacritics\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n */\nexport const diacriticRegexPoints = (regex:string):string => {\n\n\tif( diacritic_patterns === undefined ){\n\t\tdiacritic_patterns = generateDiacritics();\n\t}\n\t\n\tconst decomposed\t\t= regex.normalize('NFKD').toLowerCase();\n\t\n\treturn decomposed.split(latin_pat).map((part:string)=>{\n\t\t\n\t\tif( part == '' ){\n\t\t\treturn '';\n\t\t}\n\t\t\n\t\t// \"ﬄ\" or \"ffl\"\n\t\tconst no_accent = asciifold(part);\t\t\t\t\n\t\tif( diacritic_patterns.hasOwnProperty(no_accent) ){\n\t\t\treturn diacritic_patterns[no_accent];\n\t\t}\n\t\t\n\t\t// 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\t\tconst composed_part = part.normalize('NFC');\n\t\tif( composed_part != part ){\n\t\t\treturn arrayToPattern([part,composed_part]);\n\t\t}\n\t\t\t\t\n\t\treturn part;\n\t}).join('');\n\t\n}\n","\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { asciifold } from './diacritics.ts';\n\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from './types.ts';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n/**\n *\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n */\nexport const escape_regex = (str:string):string => {\t\n\treturn (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:number|string)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n","/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n // @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { scoreValue, getAttr, getAttrNesting, escape_regex, propToArray, iterate, cmp } from './utils.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport { diacriticRegexPoints } from './diacritics.ts';\n// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\nimport * as T from 'types.ts';\n\nexport default class Sifter{\n\n\tpublic items; // []|{};\n\tpublic settings: T.Settings;\n\n\t/**\n\t * Textually searches arrays and hashes of objects\n\t * by property (or multiple properties). Designed\n\t * specifically for autocomplete.\n\t *\n\t */\n\tconstructor(items:any, settings:T.Settings) {\n\t\tthis.items = items;\n\t\tthis.settings = settings || {diacritics: true};\n\t};\n\n\t/**\n\t * Splits a search string into an array of individual\n\t * regexps to be used to match results.\n\t *\n\t */\n\ttokenize(query:string, respect_word_boundaries?:boolean, weights?:T.Weights ):T.Token[] {\n\t\tif (!query || !query.length) return [];\n\n\t\tconst tokens:T.Token[]\t= [];\n\t\tconst words\t\t\t\t= query.split(/\\s+/);\n\t\tvar field_regex:RegExp;\n\n\t\tif( weights ){\n\t\t\tfield_regex = new RegExp( '^('+ Object.keys(weights).map(escape_regex).join('|')+')\\:(.*)$');\n\t\t}\n\n\t\twords.forEach((word:string) => {\n\t\t\tlet field_match;\n\t\t\tlet field:null|string\t= null;\n\t\t\tlet regex:null|string\t= null;\n\n\t\t\t// look for \"field:query\" tokens\n\t\t\tif( field_regex && (field_match = word.match(field_regex)) ){\n\t\t\t\tfield\t= field_match[1];\n\t\t\t\tword\t= field_match[2];\n\t\t\t}\n\n\t\t\tif( word.length > 0 ){\n\t\t\t\tregex = escape_regex(word);\n\t\t\t\tif( this.settings.diacritics ){\n\t\t\t\t\tregex = diacriticRegexPoints(regex);\n\t\t\t\t}\n\t\t\t\tif( respect_word_boundaries ) regex = \"\\\\b\"+regex;\n\t\t\t}\n\n\t\t\ttokens.push({\n\t\t\t\tstring : word,\n\t\t\t\tregex  : regex ? new RegExp(regex,'iu') : null,\n\t\t\t\tfield  : field,\n\t\t\t});\n\t\t});\n\n\t\treturn tokens;\n\t};\n\n\n\t/**\n\t * Returns a function to be used to score individual results.\n\t *\n\t * Good matches will have a higher score than poor matches.\n\t * If an item is not a match, 0 will be returned by the function.\n\t *\n\t * @returns {function}\n\t */\n\tgetScoreFunction(query:string, options:T.Options ){\n\t\tvar search = this.prepareSearch(query, options);\n\t\treturn this._getScoreFunction(search);\n\t}\n\n\t_getScoreFunction(search:T.PrepareObj ){\n\t\tconst tokens\t\t= search.tokens,\n\t\ttoken_count\t\t\t= tokens.length;\n\n\t\tif (!token_count) {\n\t\t\treturn function() { return 0; };\n\t\t}\n\n\t\tconst fields\t= search.options.fields,\n\t\tweights\t\t\t= search.weights,\n\t\tfield_count\t\t= fields.length,\n\t\tgetAttrFn\t\t= search.getAttrFn;\n\n\t\tif (!field_count) {\n\t\t\treturn function() { return 1; };\n\t\t}\n\n\n\t\t/**\n\t\t * Calculates the score of an object\n\t\t * against the search query.\n\t\t *\n\t\t */\n\t\tconst scoreObject = (function() {\n\n\n\t\t\tif (field_count === 1) {\n\t\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\t\tconst field = fields[0].field;\n\t\t\t\t\treturn scoreValue(getAttrFn(data, field), token, weights[field]);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn function(token:T.Token, data:{}) {\n\t\t\t\tvar sum = 0;\n\n\t\t\t\t// is the token specific to a field?\n\t\t\t\tif( token.field ){\n\n\t\t\t\t\tconst value = getAttrFn(data, token.field);\n\n\t\t\t\t\tif( !token.regex && value ){\n\t\t\t\t\t\tsum += (1/field_count);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsum += scoreValue(value, token, 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t}else{\n\t\t\t\t\titerate(weights, (weight:number, field:string) => {\n\t\t\t\t\t\tsum += scoreValue(getAttrFn(data, field), token, weight);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn sum / field_count;\n\t\t\t};\n\t\t})();\n\n\t\tif (token_count === 1) {\n\t\t\treturn function(data:{}) {\n\t\t\t\treturn scoreObject(tokens[0], data);\n\t\t\t};\n\t\t}\n\n\t\tif (search.options.conjunction === 'and') {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar i = 0, score, sum = 0;\n\t\t\t\tfor (; i < token_count; i++) {\n\t\t\t\t\tscore = scoreObject(tokens[i], data);\n\t\t\t\t\tif (score <= 0) return 0;\n\t\t\t\t\tsum += score;\n\t\t\t\t}\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(data:{}) {\n\t\t\t\tvar sum = 0;\n\t\t\t\titerate(tokens,(token:T.Token)=>{\n\t\t\t\t\tsum += scoreObject(token, data);\n\t\t\t\t});\n\t\t\t\treturn sum / token_count;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Returns a function that can be used to compare two\n\t * results, for sorting purposes. If no sorting should\n\t * be performed, `null` will be returned.\n\t *\n\t * @return function(a,b)\n\t */\n\tgetSortFunction(query:string, options:T.Options) {\n\t\tvar search  = this.prepareSearch(query, options);\n\t\treturn this._getSortFunction(search);\n\t}\n\n\t_getSortFunction(search:T.PrepareObj){\n\t\tvar i, n, implicit_score;\n\n\t\tconst self\t= this,\n\t\toptions\t\t= search.options,\n\t\tsort\t\t= (!search.query && options.sort_empty) ? options.sort_empty : options.sort,\n\t\tsort_flds:T.Sort[]\t\t= [],\n\t\tmultipliers:number[]\t= [];\n\n\n\t\t/**\n\t\t * Fetches the specified sort field value\n\t\t * from a search result item.\n\t\t *\n\t\t */\n\t\tconst get_field = function(name:string, result:T.ResultItem):string|number {\n\t\t\tif (name === '$score') return result.score;\n\t\t\treturn search.getAttrFn(self.items[result.id], name);\n\t\t};\n\n\t\t// parse options\n\t\tif (sort) {\n\t\t\tfor (i = 0, n = sort.length; i < n; i++) {\n\t\t\t\tif (search.query || sort[i].field !== '$score') {\n\t\t\t\t\tsort_flds.push(sort[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// the \"$score\" field is implied to be the primary\n\t\t// sort field, unless it's manually specified\n\t\tif (search.query) {\n\t\t\timplicit_score = true;\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\timplicit_score = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (implicit_score) {\n\t\t\t\tsort_flds.unshift({field: '$score', direction: 'desc'});\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\t\tif (sort_flds[i].field === '$score') {\n\t\t\t\t\tsort_flds.splice(i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, n = sort_flds.length; i < n; i++) {\n\t\t\tmultipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t\t}\n\n\t\t// build function\n\t\tconst sort_flds_count = sort_flds.length;\n\t\tif (!sort_flds_count) {\n\t\t\treturn null;\n\t\t} else if (sort_flds_count === 1) {\n\t\t\tconst sort_fld = sort_flds[0].field;\n\t\t\tconst multiplier = multipliers[0];\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\treturn multiplier * cmp(\n\t\t\t\t\tget_field(sort_fld, a),\n\t\t\t\t\tget_field(sort_fld, b)\n\t\t\t\t);\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(a:T.ResultItem, b:T.ResultItem) {\n\t\t\t\tvar i, result, field;\n\t\t\t\tfor (i = 0; i < sort_flds_count; i++) {\n\t\t\t\t\tfield = sort_flds[i].field;\n\t\t\t\t\tresult = multipliers[i] * cmp(\n\t\t\t\t\t\tget_field(field, a),\n\t\t\t\t\t\tget_field(field, b)\n\t\t\t\t\t);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * Parses a search query and returns an object\n\t * with tokens and fields ready to be populated\n\t * with results.\n\t *\n\t */\n\tprepareSearch(query:string, optsUser:T.Options):T.PrepareObj {\n\t\tconst weights:T.Weights = {};\n\t\tvar options\t\t= Object.assign({},optsUser);\n\n\t\tpropToArray(options,'sort');\n\t\tpropToArray(options,'sort_empty');\n\n\t\t// convert fields to new format\n\t\tif( options.fields ){\n\t\t\tpropToArray(options,'fields');\n\t\t\tconst fields:T.Field[] = [];\n\t\t\toptions.fields.forEach((field:string|T.Field) => {\n\t\t\t\tif( typeof field == 'string' ){\n\t\t\t\t\tfield = {field:field,weight:1};\n\t\t\t\t}\n\t\t\t\tfields.push(field);\n\t\t\t\tweights[field.field] = ('weight' in field) ? field.weight : 1;\n\t\t\t});\n\t\t\toptions.fields = fields;\n\t\t}\n\n\n\t\treturn {\n\t\t\toptions\t\t: options,\n\t\t\tquery\t\t: query.toLowerCase().trim(),\n\t\t\ttokens\t\t: this.tokenize(query, options.respect_word_boundaries, weights),\n\t\t\ttotal\t\t: 0,\n\t\t\titems\t\t: [],\n\t\t\tweights\t\t: weights,\n\t\t\tgetAttrFn\t: (options.nesting) ? getAttrNesting : getAttr,\n\t\t};\n\t};\n\n\t/**\n\t * Searches through all items and returns a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string, options:T.Options) : T.PrepareObj {\n\t\tvar self = this, score, search:T.PrepareObj;\n\n\t\tsearch  = this.prepareSearch(query, options);\n\t\toptions = search.options;\n\t\tquery   = search.query;\n\n\t\t// generate result scoring function\n\t\tconst fn_score = options.score || self._getScoreFunction(search);\n\n\t\t// perform search and sort\n\t\tif (query.length) {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tscore = fn_score(item);\n\t\t\t\tif (options.filter === false || score > 0) {\n\t\t\t\t\tsearch.items.push({'score': score, 'id': id});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\titerate(self.items, (item:T.ResultItem, id:string|number) => {\n\t\t\t\tsearch.items.push({'score': 1, 'id': id});\n\t\t\t});\n\t\t}\n\n\t\tconst fn_sort = self._getSortFunction(search);\n\t\tif (fn_sort) search.items.sort(fn_sort);\n\n\t\t// apply limits\n\t\tsearch.total = search.items.length;\n\t\tif (typeof options.limit === 'number') {\n\t\t\tsearch.items = search.items.slice(0, options.limit);\n\t\t}\n\n\t\treturn search;\n\t};\n}\n","\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( query.indexOf('<') > -1 ){\n\t\tlet div = document.createElement('div');\n\t\tdiv.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn div.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\tfor( let _classes of args ){\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t}\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\tfor( const attr in attrs ){\n\t\tlet val = attrs[attr];\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr);\n\t\t}else{\n\t\t\tel.setAttribute(attr, ''+val);\n\t\t}\n\t}\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n","/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0].length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tfor (var i = 0; i < node.childNodes.length; ++i) {\n\t\t\t\ti += highlightRecursive(node.childNodes[i]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n","export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n","\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\tcloseAfterSelect: false,\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-control',\n\tinputClass: 'ts-input',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: null,\n\n\tcopyClassesToDropdown: true,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n","\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor (type in event_args) {\n\t\ttrigger.apply(self, event_args[type]);\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Prevent default\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n","\nimport MicroEvent from './contrib/microevent.js';\nimport MicroPlugin from './contrib/microplugin.js';\nimport Sifter from '@orchidjs/sifter/lib/sifter';\nimport { escape_regex } from '@orchidjs/sifter/lib/utils';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight.js';\nimport * as constants from './constants.js';\nimport getSettings from './getSettings.js';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic tab_key\t\t\t\t\t: boolean = false;\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\tpublic renderCache\t\t\t\t: {[key:string]:{[key:string]:HTMLElement}} = {'item':{},'option':{}};\n\n\n\n\tconstructor( input_arg: string|TomInput, settings:TomSettings ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\t\tvar self\t\t\t\t= this;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tthis.settings\t\t\t= getSettings( input, settings );\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: this.settings.diacritics});\n\n\t\tthis.setupOptions(this.settings.options,this.settings.optgroups);\n\t\tdelete this.settings.optgroups;\n\t\tdelete this.settings.options;\n\n\n\t\t// option-dependent defaults\n\t\tthis.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof this.settings.hideSelected !== 'boolean') {\n\t\t\tthis.settings.hideSelected = this.settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof this.settings.hidePlaceholder !== 'boolean' ){\n\t\t\tthis.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = this.settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tthis.settings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tthis.settings.createFilter = () => true;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(this.settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t/**\n\t\t * Create all elements and set up event bindings.\n\t\t *\n\t\t */\n\n\t\tvar settings:TomSettings = self.settings;\n\t\tvar wrapper: HTMLElement;\n\t\tvar control: HTMLElement;\n\t\tvar control_input: HTMLInputElement;\n\t\tvar dropdown: HTMLElement;\n\t\tvar dropdown_content: HTMLElement;\n\t\tvar inputMode: string;\n\t\tvar classes;\n\t\tvar classes_plugins;\n\t\tvar input\t\t\t\t\t= self.input;\n\t\tvar control_id: string;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId: string\t\t= self.inputId +'-ts-dropdown';\n\n\n\n\t\tinputMode\t\t\t= self.settings.mode;\n\t\tclasses\t\t\t\t= input.getAttribute('class') || '';\n\n\t\twrapper\t\t\t\t= getDom('<div>');\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\tcontrol\t\t\t\t= getDom('<div class=\"items\">');\n\t\taddClasses(control,settings.inputClass);\n\t\tappend( wrapper, control );\n\n\n\t\tdropdown\t\t\t= self._render('dropdown');\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t\tdropdown_content\t= getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\t\tif( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />' ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete'];\n\t\t\tfor( const attr of attrs ){\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !settings.controlInput ){\n\t\t\tcontrol_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t\t\tcontrol.appendChild( control_input );\n\t\t}\n\n\n\t\tsetAttr(control_input,{\n\t\t\trole:'combobox',\n\t\t\thaspopup:'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tcontrol_id = getId(control_input,self.inputId + '-tomselected');\n\n\t\tlet query = \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tlet label = document.querySelector(query);\n\t\tif( label ){\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tlet label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\n\t\tif(self.settings.copyClassesToDropdown) {\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tclasses_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (self.settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!self.settings.splitOn && self.settings.delimiter) {\n\t\t\tself.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( this.settings.load && this.settings.loadThrottle ){\n\t\t\tthis.settings.load = loadDebounce(this.settings.load,this.settings.loadThrottle)\n\t\t}\n\n\n\t\tthis.control\t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\n\t\tself.control_input.type\t= input.type;\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '.'+self.settings.itemClass, control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// retain focus by preventing native handling. if the\n\t\t// event target is the input it should not be modified.\n\t\t// otherwise, text selection within the input won't work.\n\t\taddEvent(control_input,'mousedown',\t(e) =>{\n\t\t\tif( control_input.value !== '' ){\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\t\t});\n\n\n\t\taddEvent(control_input,'keydown',\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keyup',\t\t(e) => self.onKeyUp(e as KeyboardEvent) );\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'resize',\t() => self.positionDropdown(), passive_event);\n\t\taddEvent(control_input,'blur',\t\t() => self.onBlur() );\n\t\taddEvent(control_input,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// clicking anywhere in the control should not blur the control_input & close the dropdown\n\t\t\tpreventDefault(evt,true);\n\t\t};\n\n\t\tvar win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'sroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('sroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tsetAttr(input,{\thidden:'hidden'});\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\n\t\tself.setValue(settings.items);\n\t\tsettings.items = [];\n\n\t\taddEvent(input,'invalid', (e) => {\n\t\t\tpreventDefault(e);\n\t\t\tif( !self.isInvalid ){\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.load('');\n\t\t}\n\n\t\tself.setup();\n\t}\n\n\t/**\n\t * @deprecated v1.7.6\n\t *\n\t */\n\tsetup(){}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tfor( const option of options ){\n\t\t\tthis.registerOption(option);\n\t\t}\n\n\n\t\t// build optgroup table\n\t\tfor( const optgroup of optgroups ){\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t}\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isFull() || self.isInputHidden || self.isLocked) {\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif (self.settings.splitOn) {\n\n\t\t\t// Wait for pasted text to be recognized in value\n\t\t\tsetTimeout(() => {\n\t\t\t\tvar pastedText = self.inputValue();\n\t\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\t\tfor( const piece of splitInput ){\n\t\t\t\t\tself.createItem(piece);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tself.selectAll();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif (self.isOpen && self.activeOption) {\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.isOpen && self.activeOption) {\n\t\t\t\t\t\tself.tab_key = true;\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.tab_key = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonKeyUp(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif (self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tvar value = self.inputValue();\n\t\tif (self.lastValue !== value) {\n\t\t\tself.lastValue = value;\n\n\t\t\tif( self.settings.shouldLoad.call(self,value) ){\n\t\t\t\tself.load(value);\n\t\t\t}\n\n\t\t\tself.refreshOptions();\n\t\t\tself.trigger('type', value);\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif (self.isDisabled) {\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif (self.settings.preload === 'focus') self.load('');\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.showInput();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur():void {\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, false, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\t\tif( !option ){\n\t\t\treturn;\n\t\t}\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, true, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.showInput();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.hideInput();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tthis.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.control_input,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\n\t\tif (this.settings.mode === 'single') return;\n\n\t\tthis.activeItems = this.controlChildren();\n\n\t\tif( this.activeItems.length ){\n\t\t\taddClasses( this.activeItems, 'active' );\n\n\t\t\tthis.hideInput();\n\t\t\tthis.close();\n\t\t}\n\t\tthis.focus();\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( self.settings.controlInput ) return;\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\t\t\taddClasses(self.wrapper,'input-hidden');\n\t\t}else{\n\t\t\tself.isInputHidden = false;\n\t\t\tremoveClasses(self.wrapper,'input-hidden');\n\t\t}\n\t}\n\n\t/**\n\t * Hides the input element out of view, while\n\t * retaining its focus.\n\t * @deprecated 1.3\n\t */\n\thideInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Restores input visibility.\n\t * @deprecated 1.3\n\t */\n\tshowInput() {\n\t\tthis.inputState();\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif (self.isDisabled) return;\n\n\t\tself.ignoreFocus = true;\n\t\tself.control_input.focus();\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.control_input.blur();\n\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar i, result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tfor (i = result.items.length - 1; i >= 0; i--) {\n\t\t\t\tlet hashed = hash_key(result.items[i].id);\n\t\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\t\t\t\t\tresult.items.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t\tvar create;\n\t\tconst groups: {[key:string]:DocumentFragment} = {};\n\n\t\tconst groups_order:string[]\t= [];\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option\t\t\t= self.activeOption;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\t\tif( active_option ){\n\t\t\tactive_value = active_option.dataset.value;\n\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet opt_value\t\t= results.items[i].id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\t\t\tlet option_el\t\t= self.getOption(opt_value,true) as HTMLElement;\n\t\t\t\n\t\t\t\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_value) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\t\t\t\tif (!self.optgroups.hasOwnProperty(optgroup)) {\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}\n\t\t\t\tif (!groups.hasOwnProperty(optgroup)) {\n\t\t\t\t\tgroups[optgroup] = document.createDocumentFragment();\n\t\t\t\t\tgroups_order.push(optgroup);\n\t\t\t\t}\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\t\t\t\t}\n\n\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\tif( active_value == opt_value && active_group && active_group.dataset.group === optgroup ){\n\t\t\t\t\tactive_option = option_el;\n\t\t\t\t}\n\n\t\t\t\tgroups[optgroup].appendChild(option_el);\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif (this.settings.lockOptgroupOrder) {\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\tvar a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t\t\t\tvar b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t\t\t\treturn a_order - b_order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\tfor( optgroup of groups_order ){\n\t\t\tif (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, groups[optgroup] );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:self.optgroups[optgroup],options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, groups[optgroup] );\n\t\t\t}\n\t\t}\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\tfor( const tok of results.tokens ){\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\t\t// invalid query\n\t\tif( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add loading message\n\t\t}else if( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption(data:TomOption|TomOption[]):void {\n\t\tvar value, self = this;\n\n\t\tif (Array.isArray(data)) {\n\t\t\tfor( const dat of data ){\n\t\t\t\tself.addOption(dat);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (value = self.registerOption(data)) {\n\t\t\tself.userOptions[value] = true;\n\t\t\tself.lastQuery = null;\n\t\t\tself.trigger('option_add', value, data);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an option to the pool of options.\n\t *\n\t */\n\tregisterOption(data:TomOption):false|string {\n\t\tvar key = hash_key(data[this.settings.valueField]);\n\t\tif ( key === null || this.options.hasOwnProperty(key)) return false;\n\n\t\tdata.$order\t\t\t= data.$order || ++this.order;\n\t\tdata.$id\t\t\t= this.inputId + '-opt-' + data.$order;\n\t\tthis.options[key]\t= data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst hashed\t\t= hash_key(value);\n\t\tif (hashed === null) return;\n\n\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\t\tconst option\t\t= self.getOption(hashed);\n\t\tconst item\t\t\t= self.getItem(hashed);\n\n\n\t\t// sanity checks\n\t\tif (!self.options.hasOwnProperty(hashed)) return;\n\t\tif (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n\t\tdata.$order = data.$order || self.options[hashed].$order;\n\t\tdelete self.options[hashed];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\t\tself.uncacheValue(hashed,false);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(hashed);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions() {\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\t\tvar selected:TomOptions\t= {};\n\t\tfor( let key in this.options){\n    \t\tif( this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0 ){\n\t\t\t\tselected[key] = this.options[key];\n\t\t\t}\n\t\t}\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string, remove_node:boolean=true){\n\t\tconst self\t\t\t\t= this;\n\t\tconst cache_items\t\t= self.renderCache['item'];\n\t\tconst cache_options\t\t= self.renderCache['option'];\n\n\t\tif (cache_items) delete cache_items[value];\n\t\tif (cache_options) delete cache_options[value];\n\n\t\tif( remove_node ){\n\t\t\tconst option_el\t\t\t= self.getOption(value);\n\t\t\tif( option_el ) option_el.remove();\n\t\t}\n\t}\n\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:null|string, create:boolean=false):null|HTMLElement {\n\t\tvar hashed = hash_key(value);\n\t\tvar option_el = this.rendered('option',hashed);\n\t\t\n\t\tif( !option_el && create && hashed !== null ){\n\t\t\toption_el = this._render('option', this.options[hashed]);\n\t\t}\n\t\t\n\t\treturn option_el;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tfor (let i = 0, n = items.length; i < n; i++) {\n\t\t\tself.isPending = (i < n - 1);\n\t\t\tself.addItem(items[i], silent);\n\t\t}\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\t\t\t\tlet options = self.selectable();\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif ( !options.length || self.isFull()) {\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, triggerDropdown:boolean=true, callback:TomCreateCallback = ()=>{} ):boolean{\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tself.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tvar self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tvar isFull   = self.isFull();\n\n\t\tvar isLocked = self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\t\tvar classList = self.control.classList;\n\n\t\tclassList.toggle('focus', self.isFocused)\n\t\tclassList.toggle('disabled', self.isDisabled)\n\t\tclassList.toggle('required', self.isRequired)\n\t\tclassList.toggle('invalid', self.isInvalid)\n\t\tclassList.toggle('locked', isLocked)\n\t\tclassList.toggle('full', isFull)\n\t\tclassList.toggle('not-full', !isFull)\n\t\tclassList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\tclassList.toggle('dropdown-active', self.isOpen)\n\t\tclassList.toggle('has-options', isEmptyObject(self.options) )\n\t\tclassList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.checkValidity ){\n\t\t\treturn;\n\t\t}\n\n\t\t// if required, make sure the input required attribute = true so checkValidity() will work\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = true;\n\t\t}\n\n\t\tvar invalid = !self.input.checkValidity();\n\n\t\tself.isInvalid = invalid;\n\t\tself.control_input.required = invalid;\n\n\t\tif( this.isRequired ){\n\t\t\tself.input.required = !invalid;\n\t\t}\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar i, value, option, option_el, label;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\tself.input.prepend(option_el);\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\tsetAttr(option_el,{selected:'true'});\n\t\t\t\toption_el.selected = true;\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option[selected]').forEach((option_el:Element) => {\n\t\t\t\tsetAttr(option_el,{selected:null});\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired ){\n\t\t\t\toption_el = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\t\t\t\tAddSelected(option_el, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tfor( i = self.items.length-1; i >=0 ; i-- ){\n\t\t\t\t\tvalue\t\t\t= self.items[i];\n\t\t\t\t\toption\t\t\t= self.options[value];\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not([selected])`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.hideInput();\n\n\t\t\t\t// Do not trigger blur while inside a blur event,\n\t\t\t\t// this fixes some weird tabbing behavior in FF and IE.\n\t\t\t\t// See #selectize.js#1164\n\t\t\t\tif( !self.tab_key ){\n\t\t\t\t\tself.blur(); // close keyboard on iOS\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.control_input,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\tfor( const item of items ){\n\t\t\tself.removeItem(item,true);\n\t\t}\n\n\t\tself.showInput();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tvar self = this;\n\t\tvar caret\t= Math.min(self.caretPos, self.items.length);\n\t\tvar target\t= self.control;\n\n\t\tif (caret === 0) {\n\t\t\ttarget.insertBefore(el, target.firstChild);\n\t\t} else {\n\t\t\ttarget.insertBefore(el, target.children[caret]);\n\t\t}\n\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\tfor( const item of self.activeItems ){\n\t\t\t\trm_items.push( item );\n\t\t\t}\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tif (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t\t\t\trm_items.push( items[self.caretPos - 1]);\n\n\t\t\t} else if (direction > 0 && selection.start === self.inputValue().length) {\n\t\t\t\trm_items.push(items[self.caretPos]);\n\t\t\t}\n\t\t}\n\n\t\tconst values = rm_items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self,values,e) === false)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.showInput();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar idx, last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else if( self.isFocused && !self.activeItems.length ){\n\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t// move caret before or after selected items\n\t\t}else{\n\n\t\t\tlast_active\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\t\t\t\tidx = nodeIndex(last_active);\n\t\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\t\tself.setActiveItem();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tvar self = this;\n\n\t\tif( self.settings.mode === 'single' || self.settings.controlInput ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.getElementsByClassName(this.settings.itemClass) ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.close();\n\t\tthis.isLocked = true;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.isLocked = false;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= true;\n\t\tself.control_input.disabled\t\t= true;\n\t\tself.control_input.tabIndex\t\t= -1;\n\t\tself.isDisabled\t\t\t\t\t= true;\n\t\tself.lock();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tvar self = this;\n\t\tself.input.disabled\t\t\t\t= false;\n\t\tself.control_input.disabled\t\t= false;\n\t\tself.control_input.tabIndex\t\t= self.tabIndex;\n\t\tself.isDisabled\t\t\t\t\t= false;\n\t\tself.unlock();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected');\n\t\tsetAttr(self.input,{hidden:null});\n\t\tself.input.required = this.isRequired;\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._render(templateName, data);\n\t}\n\n\t/**\n\t * _render() can be called directly when we know we don't want to hit the cache\n\t * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tvar value = '', id, html;\n\t\tconst self = this;\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tvalue\t= get_hash(data[self.settings.valueField]);\n\t\t\thtml\t= self.rendered(templateName,value);\n\n\t\t\tif( html ){\n\t\t\t\treturn html;\n\t\t\t}\n\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( html == null ){\n\t\t\treturn html;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// update cache\n\t\t\tself.renderCache[templateName][value] = html;\n\n\t\t}\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * Return the previously rendered item or option\n\t *\n\t */\n\trendered( templateName:TomTemplateNames, value:null|string ):null|HTMLElement{\n\t\treturn value !== null && this.renderCache[templateName].hasOwnProperty(value)\n\t\t\t? this.renderCache[templateName][value]\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache( templateName?:'item'|'option' ):void{\n\t\tvar self = this;\n\n\t\t// remove options from DOM\n\t\tif(templateName === void 0 || 'option' ){\n\t\t\tfor( let key in self.options){\n\t\t\t\tconst el = self.getOption(key);\n\t\t\t\tif( el ) el.remove();\n\t\t\t}\n\t\t}\n\n\t\tif( templateName === void 0 ){\n\t\t\tself.renderCache = {'item':{},'option':{}};\n\t\t} else {\n\t\t\tself.renderCache[templateName] = {};\n\t\t}\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n","/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\ntype TPluginItem = {name:string,options:{}};\ntype TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n","import defaults from './defaults.js';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings } from './types/index';\n\nexport default function getSettings( input:HTMLInputElement, settings_user:TomSettings):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\tfor( const option of optgroup.children ){\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t}\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\tfor( const child of input.children ){\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t}\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\tfor( const value of values ){\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t}\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\tfor( const opt of settings_element.options ){\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n"],"names":["forEvents","events","callback","split","forEach","event","MicroEvent","constructor","_events","on","fct","this","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","diacriticRegexPoints","regex","undefined","diacritics","code_range","i","diacritic","String","fromCharCode","latin","latin_chars","sort","a","b","pattern","map","sub_pat","l","hasOwnProperty","generateDiacritics","part","no_accent","composed_part","getAttr","obj","name","getAttrNesting","names","shift","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","key","Array","isArray","iterate","object","cmp","Sifter","items","settings","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","match","getScoreFunction","options","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","get_field","id","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightRecursive","node","nodeType","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightText","childNodes","test","tagName","highlightChildren","KEY_SHORTCUT","navigator","userAgent","optgroups","plugins","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","fn","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","call","debounce_events","types","type","event_args","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","parent","instance_i","TomSelect","Interface","requested","loaded","initializePlugins","queue","plugin","require","loadPlugin","Error","MicroPlugin","input_arg","dir","order","tab_key","isOpen","isDisabled","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","settings_user","defaults","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","optionsMap","group_count","readData","dataset","json","JSON","parse","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","data_raw","opt","values","init_textbox","getSettings","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupOptions","setupCallbacks","setupTemplates","control","control_input","dropdown","dropdown_content","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","_render","role","haspopup","escapeQuery","label","for","label_id","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","_destroy","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","setup","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","constants","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","prototype","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getSearchOptions","calculateScore","currentResults","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","elements","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","querySelectorAll","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","start","selectionStart","selectionEnd","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new"],"mappings":"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"}