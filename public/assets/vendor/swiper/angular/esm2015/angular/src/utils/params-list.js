/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    'enabled',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
    'on',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sU0FBUztJQUNULFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLFFBQVE7SUFDUixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLFdBQVc7SUFDWCxLQUFLO0lBQ0wscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLE9BQU87SUFDUCxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsMkJBQTJCO0lBQzNCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlO0lBQ2YsY0FBYztJQUNkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsK0JBQStCO0lBQy9CLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsT0FBTztJQUNQLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsd0JBQXdCO0lBQ3hCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLDJCQUEyQjtJQUMzQixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBRXRCLFVBQVU7SUFDVixNQUFNO0lBQ04sVUFBVTtJQUNWLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVU7SUFDVixNQUFNO0lBQ04sWUFBWTtJQUNaLGFBQWE7SUFDYixhQUFhO0lBQ2IsVUFBVTtJQUNWLFlBQVk7SUFDWixTQUFTO0lBQ1QsU0FBUztJQUNULE1BQU07SUFDTixJQUFJO0NBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHVuZGVyc2NvcmUgaW4gbmFtZSAtPiB3YXRjaCBmb3IgY2hhbmdlcyAqL1xuZXhwb3J0IGNvbnN0IHBhcmFtc0xpc3QgPSBbXG4gICdpbml0JyxcbiAgJ2VuYWJsZWQnLFxuICAnX2RpcmVjdGlvbicsXG4gICd0b3VjaEV2ZW50c1RhcmdldCcsXG4gICdpbml0aWFsU2xpZGUnLFxuICAnX3NwZWVkJyxcbiAgJ2Nzc01vZGUnLFxuICAndXBkYXRlT25XaW5kb3dSZXNpemUnLFxuICAncmVzaXplT2JzZXJ2ZXInLFxuICAnbmVzdGVkJyxcbiAgJ2ZvY3VzYWJsZUVsZW1lbnRzJyxcbiAgJ193aWR0aCcsXG4gICdfaGVpZ2h0JyxcbiAgJ3ByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbicsXG4gICd1c2VyQWdlbnQnLFxuICAndXJsJyxcbiAgJ19lZGdlU3dpcGVEZXRlY3Rpb24nLFxuICAnX2VkZ2VTd2lwZVRocmVzaG9sZCcsXG4gICdfZnJlZU1vZGUnLFxuICAnX2F1dG9IZWlnaHQnLFxuICAnc2V0V3JhcHBlclNpemUnLFxuICAndmlydHVhbFRyYW5zbGF0ZScsXG4gICdfZWZmZWN0JyxcbiAgJ2JyZWFrcG9pbnRzJyxcbiAgJ19zcGFjZUJldHdlZW4nLFxuICAnX3NsaWRlc1BlclZpZXcnLFxuICAnX2dyaWQnLFxuICAnX3NsaWRlc1Blckdyb3VwJyxcbiAgJ19zbGlkZXNQZXJHcm91cFNraXAnLFxuICAnX2NlbnRlcmVkU2xpZGVzJyxcbiAgJ19jZW50ZXJlZFNsaWRlc0JvdW5kcycsXG4gICdfc2xpZGVzT2Zmc2V0QmVmb3JlJyxcbiAgJ19zbGlkZXNPZmZzZXRBZnRlcicsXG4gICdub3JtYWxpemVTbGlkZUluZGV4JyxcbiAgJ19jZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMnLFxuICAnX3dhdGNoT3ZlcmZsb3cnLFxuICAncm91bmRMZW5ndGhzJyxcbiAgJ3RvdWNoUmF0aW8nLFxuICAndG91Y2hBbmdsZScsXG4gICdzaW11bGF0ZVRvdWNoJyxcbiAgJ19zaG9ydFN3aXBlcycsXG4gICdfbG9uZ1N3aXBlcycsXG4gICdsb25nU3dpcGVzUmF0aW8nLFxuICAnbG9uZ1N3aXBlc01zJyxcbiAgJ19mb2xsb3dGaW5nZXInLFxuICAnYWxsb3dUb3VjaE1vdmUnLFxuICAnX3RocmVzaG9sZCcsXG4gICd0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24nLFxuICAndG91Y2hTdGFydFByZXZlbnREZWZhdWx0JyxcbiAgJ3RvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0JyxcbiAgJ3RvdWNoUmVsZWFzZU9uRWRnZXMnLFxuICAndW5pcXVlTmF2RWxlbWVudHMnLFxuICAnX3Jlc2lzdGFuY2UnLFxuICAnX3Jlc2lzdGFuY2VSYXRpbycsXG4gICdfd2F0Y2hTbGlkZXNQcm9ncmVzcycsXG4gICdfZ3JhYkN1cnNvcicsXG4gICdwcmV2ZW50Q2xpY2tzJyxcbiAgJ3ByZXZlbnRDbGlja3NQcm9wYWdhdGlvbicsXG4gICdfc2xpZGVUb0NsaWNrZWRTbGlkZScsXG4gICdfcHJlbG9hZEltYWdlcycsXG4gICd1cGRhdGVPbkltYWdlc1JlYWR5JyxcbiAgJ19sb29wJyxcbiAgJ19sb29wQWRkaXRpb25hbFNsaWRlcycsXG4gICdfbG9vcGVkU2xpZGVzJyxcbiAgJ19sb29wRmlsbEdyb3VwV2l0aEJsYW5rJyxcbiAgJ2xvb3BQcmV2ZW50c1NsaWRlJyxcbiAgJ19hbGxvd1NsaWRlUHJldicsXG4gICdfYWxsb3dTbGlkZU5leHQnLFxuICAnX3N3aXBlSGFuZGxlcicsXG4gICdfbm9Td2lwaW5nJyxcbiAgJ25vU3dpcGluZ0NsYXNzJyxcbiAgJ25vU3dpcGluZ1NlbGVjdG9yJyxcbiAgJ3Bhc3NpdmVMaXN0ZW5lcnMnLFxuICAnY29udGFpbmVyTW9kaWZpZXJDbGFzcycsXG4gICdzbGlkZUNsYXNzJyxcbiAgJ3NsaWRlQmxhbmtDbGFzcycsXG4gICdzbGlkZUFjdGl2ZUNsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MnLFxuICAnc2xpZGVWaXNpYmxlQ2xhc3MnLFxuICAnc2xpZGVEdXBsaWNhdGVDbGFzcycsXG4gICdzbGlkZU5leHRDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZU5leHRDbGFzcycsXG4gICdzbGlkZVByZXZDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcycsXG4gICd3cmFwcGVyQ2xhc3MnLFxuICAncnVuQ2FsbGJhY2tzT25Jbml0JyxcbiAgJ29ic2VydmVyJyxcbiAgJ29ic2VydmVQYXJlbnRzJyxcbiAgJ29ic2VydmVTbGlkZUNoaWxkcmVuJyxcblxuICAvLyBtb2R1bGVzXG4gICdhMTF5JyxcbiAgJ2F1dG9wbGF5JyxcbiAgJ19jb250cm9sbGVyJyxcbiAgJ2NvdmVyZmxvd0VmZmVjdCcsXG4gICdjdWJlRWZmZWN0JyxcbiAgJ2ZhZGVFZmZlY3QnLFxuICAnZmxpcEVmZmVjdCcsXG4gICdjcmVhdGl2ZUVmZmVjdCcsXG4gICdjYXJkc0VmZmVjdCcsXG4gICdoYXNoTmF2aWdhdGlvbicsXG4gICdoaXN0b3J5JyxcbiAgJ2tleWJvYXJkJyxcbiAgJ2xhenknLFxuICAnbW91c2V3aGVlbCcsXG4gICdfbmF2aWdhdGlvbicsXG4gICdfcGFnaW5hdGlvbicsXG4gICdwYXJhbGxheCcsXG4gICdfc2Nyb2xsYmFyJyxcbiAgJ190aHVtYnMnLFxuICAndmlydHVhbCcsXG4gICd6b29tJyxcbiAgJ29uJyxcbl07XG4iXX0=