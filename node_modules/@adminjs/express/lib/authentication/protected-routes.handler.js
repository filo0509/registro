"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAdminRoute = exports.withProtectedRoutesHandler = void 0;
const adminjs_1 = require("adminjs");
const convertRoutes_1 = require("../convertRoutes");
const path_to_regexp_1 = require("path-to-regexp");
const doesNotRequireAuthentication = (url, { loginPath, logoutPath }) => {
    return (isAdminAsset(url) || url.startsWith(loginPath) || url.startsWith(logoutPath));
};
const withProtectedRoutesHandler = (router, admin) => {
    const { rootPath, loginPath, logoutPath } = admin.options;
    router.use((req, res, next) => {
        if (doesNotRequireAuthentication(req.originalUrl, { loginPath, logoutPath })) {
            return next();
        }
        if (exports.isAdminRoute(req.originalUrl, rootPath)) {
            if (!!req.session.adminUser) {
                return next();
            }
            return res.redirect(loginPath);
        }
        return next(); // custom routes in admin router
    });
};
exports.withProtectedRoutesHandler = withProtectedRoutesHandler;
const isAdminRoute = (originalUrl, adminRootPath) => {
    const adminRoutes = adminjs_1.Router.routes
        .map((route) => convertRoutes_1.convertToExpressRoute(route.path))
        .filter((route) => route !== "");
    let urlWithoutAdminRootPath = originalUrl.split("?")[0];
    if (adminRootPath !== "/") {
        urlWithoutAdminRootPath = urlWithoutAdminRootPath.replace(adminRootPath, "");
        if (!urlWithoutAdminRootPath.startsWith("/")) {
            urlWithoutAdminRootPath = `/${urlWithoutAdminRootPath}`;
        }
    }
    const isAdminRootUrl = originalUrl === adminRootPath;
    const isUrlUnderRootPath = originalUrl.startsWith(adminRootPath);
    return (isAdminRootUrl ||
        (adminRoutes.some((route) => path_to_regexp_1.pathToRegexp(route).test(urlWithoutAdminRootPath)) &&
            isUrlUnderRootPath));
};
exports.isAdminRoute = isAdminRoute;
const isAdminAsset = (url) => adminjs_1.Router.assets.find((asset) => url.match(asset.path));
//# sourceMappingURL=protected-routes.handler.js.map